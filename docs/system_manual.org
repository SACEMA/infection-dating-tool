#+TITLE: System Manual

This document is a manual for technical users, concerning the Cephia
system.

* Overview

The system is a cloud-based webserver connected to a database,
accessible from the internet with login based access.

* System architecture

A single Amazon instance, with account details held by Cephia (contact ed@eduardgrebe.net).

Not load balanced.

No failover.

* Software architecture

** ssh

ssh cephia@cephiadb.incidence-estimation.org

(password on request)

** Operating System

Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-83-generic x86_64)

** Webserver

Apache2 : Apache/2.4.7

** Database
mysql  Ver 14.14 Distrib 5.5.47, for debian-linux-gnu (x86_64) using readline 6.3
mysqld  Ver 5.5.47-0ubuntu0.14.04.1 for debian-linux-gnu on x86_64 ((Ubuntu))

** Server Framework

Django==1.8.2 
Python 2.7.6

** Frontend Framework

Javascript
jQuary

* Backups

** Code

The code is stored in Git. 

Primary source is:
  git@git.implicitdesign.co.za:cephia

Since the code is fully checked out for each installation, there are secondary sources on:

- the production server
- the staging server
- jarryd's laptop
- eduard's laptop
- gareth's laptop

** Uploaded files

All uploaded on the production server go to /home/cephia_prod/media

** Database

Database backups are run once a day using a cronjob.

Each backup is scp-ed to an ImplicitDesign server, from where they are
ftp-ed to a backup server.

Both of these servers are offsite from the primary production server.

* Tests

** running tests

To run the tests, on a working copy of the code run:

: ./scripts/run_tests.sh

** list of existing tests

Note this list can go out of date, the definite list of tests can be
seen by running the tests.

** adding more tests


* Git branch naming

master : cutting edge code, can be broken at times

staging : last version used to deploy to staging

release : last version used to deploy to production

tags : each release version is tagged with a consecutive number in the format v1.3.
       the digit '1' in the example is called the primary version number
       the digit '3' in the example is called the secondary version number
   
       by default only the secondary version number is incremented with each release.

other branches can be made for ad-hoc changes, but should not be
allowed to interfere with the deploy steps below. i.e. they should be
merged into the appropriate main branch (eg master) before starting
the deploy process.

* Deploy steps

The ideal deploy cycle involves these steps:

+ Ensure code is up-to-date on development machine
  : git pull origin master
+ Run tests on development machine
  : ./scripts/run_tests.sh
+ Merge master to staging branch on development machine
  : git checkout staging
  : git pull origin staging
  : git merge master
  : git push origin staging
+ Deploy to staging
  : fab host_cephia_test deploy:staging
+ Allow at least a day for testing all new features and regression check across the system, on staging.
+ Allow at least a day for fixing problems found, by repeating the above steps, making changes on the staging branch.
+ Merge staging branch into release branch
  : git checkout release
  : git pull origin release
  : git merge staging
  : git push origin release
+ Create a version tag and push the tag
  : git tag v1.3
  : git push --tags
+ Deploy to production
  : fab host_cephia_prod deploy:v1.3
+ Sanity check that the production deploy was successful
  + check can login
  + check important reports
+ Merge back to master
  : git checkout master
  : git pull origin staging
  : git pull origin release
  : git push origin master

* Monitoring

A Nagios server performs routine checks on the following aspects of
the server. If any check fails, an email alert is sent to Gareth
(gtp@impd.co.za), and also a red notification appears on the
monitoring display in the ImplicitDesign ofice.

** Site up time

to be confirmed

** Database backups

to be implemented

Monitoring to check that at all times, at least one backup exists on
the ImplicitDesign backup server in the last 24 hours.

** Deep ping

Confirm that the login page renders

