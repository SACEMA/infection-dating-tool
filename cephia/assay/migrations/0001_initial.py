# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
import cephia.fields


class Migration(migrations.Migration):

    dependencies = [
        ('cephia', '0030_auto_20160316_1427'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchitectAvidityResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_SCO', models.FloatField(null=True)),
                ('result_untreated_SCO', models.FloatField(null=True)),
                ('result_AI', models.FloatField(null=True)),
                ('result_AI_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_architectavidity',
            },
        ),
        migrations.CreateModel(
            name='ArchitectAvidityResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_SCO', models.CharField(max_length=255, blank=True)),
                ('result_untreated_SCO', models.CharField(max_length=255, blank=True)),
                ('result_AI', models.CharField(max_length=255, blank=True)),
                ('result_AI_recalc', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'architect_avidity_row',
            },
        ),
        migrations.CreateModel(
            name='ArchitectUnmodifiedResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_architectunmodified',
            },
        ),
        migrations.CreateModel(
            name='ArchitectUnmodifiedResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'architect_unmodified_row',
            },
        ),
        migrations.CreateModel(
            name='AssayResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reported_date', models.DateField(null=True)),
                ('test_date', models.DateField(null=True)),
                ('result', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay', null=True)),
                ('panel', models.ForeignKey(to='cephia.Panel', null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen', null=True)),
            ],
            options={
                'db_table': 'cephia_assay_results',
            },
        ),
        migrations.CreateModel(
            name='BEDResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.FloatField(null=True)),
                ('result_calibrator_OD', models.FloatField(null=True)),
                ('result_ODn', models.FloatField(null=True)),
                ('result_ODn_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_bed',
            },
        ),
        migrations.CreateModel(
            name='BEDResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.CharField(max_length=255, blank=True)),
                ('result_calibrator_OD', models.CharField(max_length=255, blank=True)),
                ('result_ODn', models.CharField(max_length=255, blank=True)),
                ('result_ODn_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'bed_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityCDCResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.FloatField(null=True)),
                ('result_untreated_OD', models.FloatField(null=True)),
                ('result_AI', models.FloatField(null=True)),
                ('result_AI_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_bioradavidity_cdc',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityCDCResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.CharField(max_length=255, blank=True)),
                ('result_untreated_OD', models.CharField(max_length=255, blank=True)),
                ('result_AI', models.CharField(max_length=255, blank=True)),
                ('result_AI_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'biorad_avidity_cdc_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityGlasgowResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.FloatField(null=True)),
                ('result_untreated_OD', models.FloatField(null=True)),
                ('result_AI', models.FloatField(null=True)),
                ('result_AI_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_bioradavidity_glasgow',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityGLASGOWResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.CharField(max_length=255, blank=True)),
                ('result_untreated_OD', models.CharField(max_length=255, blank=True)),
                ('result_AI', models.CharField(max_length=255, blank=True)),
                ('result_AI_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'biorad_avidity_glasgow_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityJHUResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.FloatField(null=True)),
                ('result_untreated_OD', models.FloatField(null=True)),
                ('result_AI', models.FloatField(null=True)),
                ('result_AI_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_bioradavidity_jhu',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityJHUResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_OD', models.CharField(max_length=255, blank=True)),
                ('result_untreated_OD', models.CharField(max_length=255, blank=True)),
                ('result_AI', models.CharField(max_length=255, blank=True)),
                ('result_AI_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'biorad_avidity_jhu_row',
            },
        ),
        migrations.CreateModel(
            name='GeeniusResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_gp36_BI', models.FloatField(null=True)),
                ('result_gp140_BI', models.FloatField(null=True)),
                ('result_p31_BI', models.FloatField(null=True)),
                ('result_gp160_BI', models.FloatField(null=True)),
                ('result_p24_BI', models.FloatField(null=True)),
                ('result_gp41_BI', models.FloatField(null=True)),
                ('result_ctrl_BI', models.FloatField(null=True)),
                ('result_GeeniusIndex', models.FloatField(null=True)),
                ('result_GeeniusIndex_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_geenius',
            },
        ),
        migrations.CreateModel(
            name='GeeniusResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_gp36_BI', models.CharField(max_length=255, blank=True)),
                ('result_gp140_BI', models.CharField(max_length=255, blank=True)),
                ('result_p31_BI', models.CharField(max_length=255, blank=True)),
                ('result_gp160_BI', models.CharField(max_length=255, blank=True)),
                ('result_p24_BI', models.CharField(max_length=255, blank=True)),
                ('result_gp41_BI', models.CharField(max_length=255, blank=True)),
                ('result_ctrl_BI', models.CharField(max_length=255, blank=True)),
                ('result_GeeniusIndex', models.CharField(max_length=255, blank=True)),
                ('result_GeeniusIndex_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'geenius_row',
            },
        ),
        migrations.CreateModel(
            name='IDEV3Result',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_tm_OD', models.FloatField(null=True)),
                ('result_v3_OD', models.FloatField(null=True)),
                ('result_ratioTM', models.FloatField(null=True)),
                ('result_ratioV3', models.FloatField(null=True)),
                ('result_intermediate', models.FloatField(null=True)),
                ('result_conclusion', models.FloatField(null=True)),
                ('result_conclusion_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_idev3',
            },
        ),
        migrations.CreateModel(
            name='IDEV3ResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_tm_OD', models.CharField(max_length=255, blank=True)),
                ('result_v3_OD', models.CharField(max_length=255, blank=True)),
                ('result_ratioTM', models.CharField(max_length=255, blank=True)),
                ('result_ratioV3', models.CharField(max_length=255, blank=True)),
                ('result_intermediate', models.CharField(max_length=255, blank=True)),
                ('result_conclusion', models.CharField(max_length=255, blank=True)),
                ('result_conclusion_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'ide_v3_row',
            },
        ),
        migrations.CreateModel(
            name='LagMaximResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.FloatField(null=True)),
                ('result_calibrator_OD', models.FloatField(null=True)),
                ('result_ODn', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('assay_result', models.ForeignKey(to='assay.AssayResult')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_lagmaxim',
            },
        ),
        migrations.CreateModel(
            name='LagMaximResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.CharField(max_length=255, blank=True)),
                ('result_calibrator_OD', models.CharField(max_length=255, blank=True)),
                ('result_ODn', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'lag_maxim_row',
            },
        ),
        migrations.CreateModel(
            name='LagSediaResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.FloatField(null=True)),
                ('result_calibrator_OD', models.FloatField(null=True)),
                ('result_ODn', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('assay_result', models.ForeignKey(to='assay.AssayResult')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_lagsedia',
            },
        ),
        migrations.CreateModel(
            name='LagSediaResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_OD', models.CharField(max_length=255, blank=True)),
                ('result_calibrator_OD', models.CharField(max_length=255, blank=True)),
                ('result_ODn', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'lag_sedia_row',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosDiluentResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_lsvitros_diluent',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosDiluentResultrow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'lsvitros_diluent_row',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosPlasmaResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_lsvitros_plasma',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosPlasmaResultrow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_SCO', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'lsvitros_plasma_row',
            },
        ),
        migrations.CreateModel(
            name='LuminexCDCResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_gp120_n', models.FloatField(null=True)),
                ('result_gp160_n', models.FloatField(null=True)),
                ('result_gp41_n', models.FloatField(null=True)),
                ('result_gp120_a', models.FloatField(null=True)),
                ('result_gp160_a', models.FloatField(null=True)),
                ('result_gp41_a', models.FloatField(null=True)),
                ('result_LuminexIndex', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_luminexcdc',
            },
        ),
        migrations.CreateModel(
            name='LuminexCDCResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_gp120_n', models.CharField(max_length=255, blank=True)),
                ('result_gp160_n', models.CharField(max_length=255, blank=True)),
                ('result_gp41_n', models.CharField(max_length=255, blank=True)),
                ('result_gp120_a', models.CharField(max_length=255, blank=True)),
                ('result_gp160_a', models.CharField(max_length=255, blank=True)),
                ('result_gp41_a', models.CharField(max_length=255, blank=True)),
                ('result_LuminexIndex', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'luminex_cdc_row',
            },
        ),
        migrations.CreateModel(
            name='PanelMembership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('replicates', models.IntegerField(null=True)),
                ('category', models.CharField(blank=True, max_length=255, choices=[(b'mdri', b'MDRI'), (b'frr', b'FRR'), (b'challenge', b'Challenge')])),
                ('panel_inclusion_criterion', models.CharField(blank=True, max_length=255, choices=[(b'recent_infection_art_naive', b'Recent Infection ART Naive'), (b'longstanding_infection_art_naive', b'Longstanding Infection ART Naive'), (b'recent_infection_art_surpressed', b'Recent Infection ART Surpressed'), (b'longstanding_infection_art_surpressed', b'Longstanding Infection ART Surpressed'), (b'recent_infection_art_unsurpressed', b'Recent Infection ART Unsurpressed'), (b'longstanding_infection_art_unsurpressed', b'Longstanding Infection ART Unsurpressed'), (b'recent_infection_ec', b'Recent Infection Elite Controller'), (b'longstanding_infection_ec', b'Longstanding Infection Elite Controller')])),
                ('panel', models.ForeignKey(to='cephia.Panel', null=True)),
                ('visit', models.ForeignKey(to='cephia.Visit', null=True)),
            ],
            options={
                'db_table': 'cephia_panel_memberships',
            },
        ),
        migrations.CreateModel(
            name='PanelMembershipRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('visit', models.CharField(max_length=255, blank=True)),
                ('panel', models.CharField(max_length=255, blank=True)),
                ('replicates', models.CharField(max_length=255, blank=True)),
                ('category', models.CharField(max_length=255, blank=True)),
                ('panel_inclusion_criterion', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'cephia_panel_membership_rows',
            },
        ),
        migrations.CreateModel(
            name='PanelShipment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('panel', models.ForeignKey(to='cephia.Panel', null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen', null=True)),
            ],
            options={
                'db_table': 'cephia_panel_shipments',
            },
        ),
        migrations.CreateModel(
            name='PanelShipmentRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen', models.CharField(max_length=255, blank=True)),
                ('panel', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'cephia_panel_shipment_rows',
            },
        ),
        migrations.CreateModel(
            name='VitrosAvidityResult',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('test_date', models.DateField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_SCO', models.FloatField(null=True)),
                ('result_untreated_SCO', models.FloatField(null=True)),
                ('result_AI', models.FloatField(null=True)),
                ('result_AI_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(to='cephia.Assay')),
                ('laboratory', models.ForeignKey(to='cephia.Laboratory', max_length=255, null=True)),
                ('specimen', models.ForeignKey(to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assayresult_vitrosavidity',
            },
        ),
        migrations.CreateModel(
            name='VitrosAvidityResultRow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.CharField(max_length=10, choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')])),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, blank=True)),
                ('assay', models.CharField(max_length=255, blank=True)),
                ('laboratory', models.CharField(max_length=255, blank=True)),
                ('test_date', models.CharField(max_length=255, blank=True)),
                ('operator', models.CharField(max_length=255, blank=True)),
                ('assay_kit_lot', models.CharField(max_length=255, blank=True)),
                ('plate_identifier', models.CharField(max_length=255, blank=True)),
                ('test_mode', models.CharField(max_length=255, blank=True)),
                ('well', models.CharField(max_length=255, blank=True)),
                ('specimen_purpose', models.CharField(max_length=255, blank=True)),
                ('result_treated_SCO', models.CharField(max_length=255, blank=True)),
                ('result_untreated_SCO', models.CharField(max_length=255, blank=True)),
                ('result_AI', models.CharField(max_length=255, blank=True)),
                ('result_AI_recalc', models.CharField(max_length=255, blank=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(to='cephia.FileInfo', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'vitros_avidity_row',
            },
        ),
    ]
