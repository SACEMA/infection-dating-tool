# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-26 10:51
from __future__ import unicode_literals

import cephia.fields
from django.db import migrations, models
import django.db.models.deletion
import lib.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cephia', '0040_auto_20160525_1533'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchitectAvidityResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('treated_guanidine_SCO', models.FloatField(null=True)),
                ('untreated_pbs_SCO', models.FloatField(null=True)),
                ('AI', models.FloatField(null=True)),
                ('AI_reported', models.FloatField(null=True)),
                ('well_treated_guanidine', models.CharField(blank=True, max_length=10)),
                ('well_untreated_pbs', models.CharField(blank=True, max_length=10)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
            ],
            options={
                'db_table': 'assay_architect_avidity',
            },
        ),
        migrations.CreateModel(
            name='ArchitectAvidityResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('treated_guanidine_SCO', models.CharField(blank=True, max_length=255)),
                ('untreated_pbs_SCO', models.CharField(blank=True, max_length=255)),
                ('AI', models.CharField(blank=True, max_length=255)),
                ('AI_reported', models.CharField(blank=True, max_length=255)),
                ('well_treated_guanidine', models.CharField(blank=True, max_length=255)),
                ('well_untreated_pbs', models.CharField(blank=True, max_length=255)),
                ('architect_avidity_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.ArchitectAvidityResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_architect_avidity_row',
            },
        ),
        migrations.CreateModel(
            name='ArchitectUnmodifiedResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('SCO', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
            ],
            options={
                'db_table': 'assay_architect_unmodified',
            },
        ),
        migrations.CreateModel(
            name='ArchitectUnmodifiedResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('SCO', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('architect_unmodified_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.ArchitectUnmodifiedResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_architect_unmodified_row',
            },
        ),
        migrations.CreateModel(
            name='AssayResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_date', models.DateField(null=True)),
                ('test_date', models.DateField(null=True)),
                ('result', models.FloatField(null=True)),
                ('unit', models.CharField(choices=[(b'ODn', b'Normalised Optical Density'), (b'OD', b'Optical Density'), (b'SCO', b'Signal/Cutoff Ratio'), (b'AI', b'Avidity Index'), (b'GeeniusIndex', b'Geenius Index'), (b'LuminexIndex', b'Luminex Index'), (b'IDEV3Conclusion', b'IDE-V3 Conclusion')], max_length=10, null=True)),
                ('method', models.CharField(max_length=50, null=True)),
                ('warning_msg', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
            ],
            options={
                'db_table': 'cephia_assay_results',
            },
        ),
        migrations.CreateModel(
            name='AssayRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_date', models.DateField()),
                ('comment', models.CharField(max_length=255, null=True)),
                ('assay', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.Assay')),
                ('fileinfo', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('laboratory', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.Laboratory')),
                ('panel', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.Panel')),
            ],
            options={
                'db_table': 'cephia_assay_runs',
            },
        ),
        migrations.CreateModel(
            name='BEDResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('OD', models.FloatField(null=True)),
                ('calibrator_OD', models.FloatField(null=True)),
                ('ODn_reported', models.FloatField(null=True)),
                ('ODn', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=10)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_bed',
            },
        ),
        migrations.CreateModel(
            name='BEDResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('OD', models.CharField(blank=True, max_length=255)),
                ('calibrator_OD', models.CharField(blank=True, max_length=255)),
                ('ODn_reported', models.CharField(blank=True, max_length=255)),
                ('ODn', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('bed_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.BEDResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_bed_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityCDCResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('treated_DEA_OD', models.FloatField(null=True)),
                ('untreated_dilwashsoln_OD', models.FloatField(null=True)),
                ('AI_reported', models.FloatField(null=True)),
                ('AI', models.FloatField(null=True)),
                ('well_treated_DEA', models.CharField(blank=True, max_length=255)),
                ('well_untreated_dilwashsoln', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_cdc',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityCDCResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('treated_DEA_OD', models.CharField(blank=True, max_length=255)),
                ('untreated_dilwashsoln_OD', models.CharField(blank=True, max_length=255)),
                ('AI_reported', models.CharField(blank=True, max_length=255)),
                ('AI', models.CharField(blank=True, max_length=255)),
                ('well_treated_DEA', models.CharField(blank=True, max_length=255)),
                ('well_untreated_dilwashsoln', models.CharField(blank=True, max_length=255)),
                ('biorad_avidity_cdc_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.BioRadAvidityCDCResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_cdc_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityGlasgowResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('treated_urea_OD', models.FloatField(null=True)),
                ('untreated_buffer_OD', models.FloatField(null=True)),
                ('AI_reported', models.FloatField(null=True)),
                ('AI', models.FloatField(null=True)),
                ('well_treated_urea', models.CharField(max_length=255, null=True)),
                ('well_untreated_buffer', models.CharField(max_length=255, null=True)),
                ('dilution', models.CharField(max_length=255, null=True)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_glasgow',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityGlasgowResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('treated_urea_OD', models.CharField(max_length=255, null=True)),
                ('untreated_buffer_OD', models.CharField(max_length=255, null=True)),
                ('AI_reported', models.CharField(max_length=255, null=True)),
                ('AI', models.CharField(max_length=255, null=True)),
                ('well_treated_urea', models.CharField(max_length=255, null=True)),
                ('well_untreated_buffer', models.CharField(max_length=255, null=True)),
                ('dilution', models.CharField(max_length=255, null=True)),
                ('biorad_avidity_glasgow_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.BioRadAvidityGlasgowResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_glasgow_row',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityJHUResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('treated_DEA_OD', models.FloatField(null=True)),
                ('untreated_dilwashsoln_OD', models.FloatField(null=True)),
                ('AI_reported', models.FloatField(null=True)),
                ('AI', models.FloatField(null=True)),
                ('well_treated_DEA', models.CharField(blank=True, max_length=255)),
                ('well_untreated_dilwashsoln', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_jhu',
            },
        ),
        migrations.CreateModel(
            name='BioRadAvidityJHUResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('treated_DEA_OD', models.CharField(blank=True, max_length=255)),
                ('untreated_dilwashsoln_OD', models.CharField(blank=True, max_length=255)),
                ('AI_reported', models.CharField(blank=True, max_length=255)),
                ('AI', models.CharField(blank=True, max_length=255)),
                ('well_treated_DEA', models.CharField(blank=True, max_length=255)),
                ('well_untreated_dilwashsoln', models.CharField(blank=True, max_length=255)),
                ('biorad_avidity_jhu_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.BioRadAvidityJHUResult')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'assay_biorad_avidity_jhu_row',
            },
        ),
        migrations.CreateModel(
            name='GeeniusResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('gp36_BI', models.FloatField(null=True)),
                ('gp140_BI', models.FloatField(null=True)),
                ('p31_BI', models.FloatField(null=True)),
                ('gp160_BI', models.FloatField(null=True)),
                ('p24_BI', models.FloatField(null=True)),
                ('gp41_BI', models.FloatField(null=True)),
                ('ctrl_BI', models.FloatField(null=True)),
                ('GeeniusIndex_reported', models.FloatField(null=True)),
                ('GeeniusIndex', models.FloatField(null=True)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_geenius',
            },
        ),
        migrations.CreateModel(
            name='GeeniusResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('gp36_BI', models.CharField(blank=True, max_length=255)),
                ('gp140_BI', models.CharField(blank=True, max_length=255)),
                ('p31_BI', models.CharField(blank=True, max_length=255)),
                ('gp160_BI', models.CharField(blank=True, max_length=255)),
                ('p24_BI', models.CharField(blank=True, max_length=255)),
                ('gp41_BI', models.CharField(blank=True, max_length=255)),
                ('ctrl_BI', models.CharField(blank=True, max_length=255)),
                ('GeeniusIndex_reported', models.CharField(blank=True, max_length=255)),
                ('GeeniusIndex', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('geenius_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.GeeniusResult')),
            ],
            options={
                'db_table': 'assay_geenius_row',
            },
        ),
        migrations.CreateModel(
            name='IDEV3Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('tm_OD', models.FloatField(null=True)),
                ('v3_OD', models.FloatField(null=True)),
                ('ratioTM', models.FloatField(null=True)),
                ('ratioV3', models.FloatField(null=True)),
                ('intermediate', models.FloatField(null=True)),
                ('conclusion', models.FloatField(null=True)),
                ('conclusion_recalc', models.FloatField(null=True)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_idev3',
            },
        ),
        migrations.CreateModel(
            name='IDEV3ResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('tm_OD', models.CharField(blank=True, max_length=255)),
                ('v3_OD', models.CharField(blank=True, max_length=255)),
                ('ratioTM', models.CharField(blank=True, max_length=255)),
                ('ratioV3', models.CharField(blank=True, max_length=255)),
                ('intermediate', models.CharField(blank=True, max_length=255)),
                ('conclusion', models.CharField(blank=True, max_length=255)),
                ('conclusion_recalc', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('idev3_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.IDEV3Result')),
            ],
            options={
                'db_table': 'assay_idev3_row',
            },
        ),
        migrations.CreateModel(
            name='LagMaximResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('OD', models.FloatField(null=True)),
                ('calibrator_OD', models.FloatField(null=True)),
                ('ODn', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=10)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_lagmaxim',
            },
        ),
        migrations.CreateModel(
            name='LagMaximResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('OD', models.CharField(blank=True, max_length=255)),
                ('calibrator_OD', models.CharField(blank=True, max_length=255)),
                ('ODn', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('lag_maxim_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.LagMaximResult')),
            ],
            options={
                'db_table': 'assay_lagmaxim_row',
            },
        ),
        migrations.CreateModel(
            name='LagSediaResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('OD', models.FloatField(null=True)),
                ('calibrator_OD', models.FloatField(null=True)),
                ('ODn', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=10)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_lagsedia',
            },
        ),
        migrations.CreateModel(
            name='LagSediaResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('OD', models.CharField(blank=True, max_length=255)),
                ('calibrator_OD', models.CharField(blank=True, max_length=255)),
                ('ODn', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('lag_sedia_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.LagSediaResult')),
            ],
            options={
                'db_table': 'assay_lagsedia_row',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosDiluentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('SCO', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=10)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_lsvitros_diluent',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosDiluentResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('SCO', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('lsvitros_diluent_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.LSVitrosDiluentResult')),
            ],
            options={
                'db_table': 'assay_lsvitros_diluent_row',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosPlasmaResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('SCO', models.FloatField(null=True)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_lsvitros_plasma',
            },
        ),
        migrations.CreateModel(
            name='LSVitrosPlasmaResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('SCO', models.CharField(blank=True, max_length=255)),
                ('well', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('lsvitros_diluent_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.LSVitrosDiluentResult')),
            ],
            options={
                'db_table': 'assay_lsvitros_plasma_row',
            },
        ),
        migrations.CreateModel(
            name='LuminexCDCResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('BSA_MFI', models.FloatField(null=True)),
                ('IgG_MFI', models.FloatField(null=True)),
                ('gp120_MFI', models.FloatField(null=True)),
                ('gp160_MFI', models.FloatField(null=True)),
                ('gp41_MFI', models.FloatField(null=True)),
                ('BSA_MFImb', models.FloatField(null=True)),
                ('IgG_MFImb', models.FloatField(null=True)),
                ('gp120_MFImb', models.FloatField(null=True)),
                ('gp160_MFImb', models.FloatField(null=True)),
                ('gp41_MFImb', models.FloatField(null=True)),
                ('calibrator_BSA', models.FloatField(null=True)),
                ('calibrator_IgG', models.FloatField(null=True)),
                ('calibrator_gp120', models.FloatField(null=True)),
                ('calibrator_gp160', models.FloatField(null=True)),
                ('calibrator_gp41', models.FloatField(null=True)),
                ('gp120_MFIn', models.FloatField(null=True)),
                ('gp160_MFIn', models.FloatField(null=True)),
                ('gp41_MFIn', models.FloatField(null=True)),
                ('DEA_treated_BSA_MFI', models.FloatField(null=True)),
                ('DEA_treated_IgG_MFI', models.FloatField(null=True)),
                ('DEA_treated_gp120_MFI', models.FloatField(null=True)),
                ('DEA_treated_gp160_MFI', models.FloatField(null=True)),
                ('DEA_treated_gp41_MFI', models.FloatField(null=True)),
                ('DEA_treated_BSA_MFImb', models.FloatField(null=True)),
                ('DEA_treated_IgG_MFImb', models.FloatField(null=True)),
                ('DEA_treated_gp120_MFImb', models.FloatField(null=True)),
                ('DEA_treated_gp160_MFImb', models.FloatField(null=True)),
                ('DEA_treated_gp41_MFImb', models.FloatField(null=True)),
                ('DEA_treated_gp120_MFIn', models.FloatField(null=True)),
                ('DEA_treated_gp160_MFIn', models.FloatField(null=True)),
                ('DEA_treated_gp41_MFIn', models.FloatField(null=True)),
                ('gp120_AI', models.FloatField(null=True)),
                ('gp160_AI', models.FloatField(null=True)),
                ('gp41_AI', models.FloatField(null=True)),
                ('recent_curtis_2016_alg', models.NullBooleanField(default=None)),
                ('recent_curtis_2013_alg35', models.NullBooleanField(default=None)),
                ('well_untreated', models.CharField(max_length=10, null=True)),
                ('well_treated', models.CharField(max_length=10, null=True)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_luminex_cdc',
            },
        ),
        migrations.CreateModel(
            name='LuminexCDCResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('BSA_MFI', models.CharField(max_length=255, null=True)),
                ('IgG_MFI', models.CharField(max_length=255, null=True)),
                ('gp120_MFI', models.CharField(max_length=255, null=True)),
                ('gp160_MFI', models.CharField(max_length=255, null=True)),
                ('gp41_MFI', models.CharField(max_length=255, null=True)),
                ('BSA_MFImb', models.CharField(max_length=255, null=True)),
                ('IgG_MFImb', models.CharField(max_length=255, null=True)),
                ('gp120_MFImb', models.CharField(max_length=255, null=True)),
                ('gp160_MFImb', models.CharField(max_length=255, null=True)),
                ('gp41_MFImb', models.CharField(max_length=255, null=True)),
                ('calibrator_BSA', models.CharField(max_length=255, null=True)),
                ('calibrator_IgG', models.CharField(max_length=255, null=True)),
                ('calibrator_gp120', models.CharField(max_length=255, null=True)),
                ('calibrator_gp160', models.CharField(max_length=255, null=True)),
                ('calibrator_gp41', models.CharField(max_length=255, null=True)),
                ('gp120_MFIn', models.CharField(max_length=255, null=True)),
                ('gp160_MFIn', models.CharField(max_length=255, null=True)),
                ('gp41_MFIn', models.CharField(max_length=255, null=True)),
                ('DEA_treated_BSA_MFI', models.CharField(max_length=255, null=True)),
                ('DEA_treated_IgG_MFI', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp120_MFI', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp160_MFI', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp41_MFI', models.CharField(max_length=255, null=True)),
                ('DEA_treated_BSA_MFImb', models.CharField(max_length=255, null=True)),
                ('DEA_treated_IgG_MFImb', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp120_MFImb', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp160_MFImb', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp41_MFImb', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp120_MFIn', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp160_MFIn', models.CharField(max_length=255, null=True)),
                ('DEA_treated_gp41_MFIn', models.CharField(max_length=255, null=True)),
                ('gp120_AI', models.CharField(max_length=255, null=True)),
                ('gp160_AI', models.CharField(max_length=255, null=True)),
                ('gp41_AI', models.CharField(max_length=255, null=True)),
                ('well_untreated', models.CharField(max_length=10, null=True)),
                ('well_treated', models.CharField(max_length=10, null=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('luminex_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.LuminexCDCResult')),
            ],
            options={
                'db_table': 'assay_luminex_cdc_row',
            },
        ),
        migrations.CreateModel(
            name='PanelMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('replicates', models.IntegerField(null=True)),
                ('category', models.CharField(blank=True, choices=[(b'mdri', b'MDRI'), (b'frr', b'FRR'), (b'challenge', b'Challenge')], max_length=255)),
                ('panel_inclusion_criterion', models.CharField(blank=True, choices=[(b'recent_infection_art_naive', b'Recent Infection ART Naive'), (b'longstanding_infection_art_naive', b'Longstanding Infection ART Naive'), (b'recent_infection_art_surpressed', b'Recent Infection ART Surpressed'), (b'longstanding_infection_art_surpressed', b'Longstanding Infection ART Surpressed'), (b'recent_infection_art_unsurpressed', b'Recent Infection ART Unsurpressed'), (b'longstanding_infection_art_unsurpressed', b'Longstanding Infection ART Unsurpressed'), (b'recent_infection_ec', b'Recent Infection Elite Controller'), (b'longstanding_infection_ec', b'Longstanding Infection Elite Controller')], max_length=255)),
                ('panel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Panel')),
                ('visit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Visit')),
            ],
            options={
                'db_table': 'cephia_panel_memberships',
            },
        ),
        migrations.CreateModel(
            name='PanelMembershipRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('visit', models.CharField(blank=True, max_length=255)),
                ('panel', models.CharField(blank=True, max_length=255)),
                ('replicates', models.CharField(blank=True, max_length=255)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('panel_inclusion_criterion', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'cephia_panel_membership_rows',
            },
        ),
        migrations.CreateModel(
            name='PanelShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Panel')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'cephia_panel_shipments',
            },
        ),
        migrations.CreateModel(
            name='PanelShipmentRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen', models.CharField(blank=True, max_length=255)),
                ('panel', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'db_table': 'cephia_panel_shipment_rows',
            },
        ),
        migrations.CreateModel(
            name='VitrosAvidityResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('warning_msg', models.CharField(max_length=255, null=True)),
                ('treated_guanidine_OD', models.FloatField(max_length=255, null=True)),
                ('untreated_pbs_OD', models.FloatField(max_length=255, null=True)),
                ('AI', models.FloatField(max_length=255, null=True)),
                ('AI_reported', models.FloatField(max_length=255, null=True)),
                ('well_treated_guanidine', models.CharField(blank=True, max_length=255)),
                ('well_untreated_pbs', models.CharField(blank=True, max_length=255)),
                ('assay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Assay')),
                ('assay_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult')),
                ('assay_run', lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory')),
                ('specimen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'assay_vitros_avidity',
            },
        ),
        migrations.CreateModel(
            name='VitrosAvidityResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('assay', models.CharField(blank=True, max_length=255, null=True)),
                ('laboratory', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.CharField(blank=True, max_length=255, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_kit_lot', models.CharField(blank=True, max_length=255, null=True)),
                ('plate_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('test_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('interpretation', models.CharField(max_length=255, null=True)),
                ('exclusion', models.CharField(max_length=255, null=True)),
                ('treated_guanidine_OD', models.CharField(blank=True, max_length=255)),
                ('untreated_pbs_OD', models.CharField(blank=True, max_length=255)),
                ('AI', models.CharField(blank=True, max_length=255)),
                ('AI_reported', models.CharField(blank=True, max_length=255)),
                ('well_treated_guanidine', models.CharField(blank=True, max_length=255)),
                ('well_untreated_pbs', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('vitros_avidity_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.VitrosAvidityResult')),
            ],
            options={
                'db_table': 'assay_vitros_avidity_row',
            },
        ),
        migrations.AddField(
            model_name='assayresult',
            name='assay_run',
            field=lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun'),
        ),
        migrations.AddField(
            model_name='assayresult',
            name='panel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Panel'),
        ),
        migrations.AddField(
            model_name='assayresult',
            name='specimen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='architectunmodifiedresult',
            name='assay_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult'),
        ),
        migrations.AddField(
            model_name='architectunmodifiedresult',
            name='assay_run',
            field=lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun'),
        ),
        migrations.AddField(
            model_name='architectunmodifiedresult',
            name='laboratory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory'),
        ),
        migrations.AddField(
            model_name='architectunmodifiedresult',
            name='specimen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='architectavidityresult',
            name='assay_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assay.AssayResult'),
        ),
        migrations.AddField(
            model_name='architectavidityresult',
            name='assay_run',
            field=lib.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='assay.AssayRun'),
        ),
        migrations.AddField(
            model_name='architectavidityresult',
            name='laboratory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Laboratory'),
        ),
        migrations.AddField(
            model_name='architectavidityresult',
            name='specimen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cephia.Specimen'),
        ),
    ]
