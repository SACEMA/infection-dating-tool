# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-10-27 12:26
from __future__ import unicode_literals
from datetime import datetime
from django.db import migrations

def fix_subject(apps, schema):
    lines = [
    "SCOPE1451 2008-12-08",
    "SCOPE1464 2008-07-17",
    "SCOPE1464 2008-10-16",
    "SCOPE1692 2010-08-13",
    "SCOPE1718 2010-10-20",
    "SCOPE1738 2010-12-17",
    "SCOPE1738 2011-02-14",
    "SCOPE1747 2011-03-09",
    "SCOPE1767 2010-10-26",
    "SCOPE1767 2011-02-25",
    "SCOPE1767 2011-05-12",
    "SCOPE1769 2011-03-06",
    "SCOPE1769 2011-05-31",
    "SCOPE1770 2010-08-04",
    "SCOPE1770 2010-08-25",
    "SCOPE1770 2011-01-10",
    "SCOPE1770 2011-06-15",
    "SCOPE1779 2011-05-26",
    "SCOPE1780 2010-11-30",
    "SCOPE1780 2011-05-17",
    "SCOPE1784 2011-07-27",
    "SCOPE1786 2011-08-16",
    "SCOPE1790 2011-09-20",
    "SCOPE1791 2011-08-04",
    "SCOPE1792 2011-09-22",
    "SCOPE2311 2009-07-24",
    "SCOPE2340 2009-02-12",
    "SCOPE2340 2009-05-21",
    "SCOPE2340 2009-08-20",
    "SCOPE2363 2009-11-13",
    "SCOPE2363 2010-02-22",
    "SCOPE2371 2009-07-13",
    "SCOPE2371 2009-12-18",
    "SCOPE2371 2010-04-08",
    "SCOPE2371 2010-04-16",
    "SCOPE2372 2010-01-25",
    "SCOPE2396 2009-08-19",
    "SCOPE2396 2009-10-05",
    "SCOPE2396 2009-12-09",
    "SCOPE2396 2010-02-26",
    "SCOPE2396 2010-06-07",
    "SCOPE2406 2009-09-10",
    "SCOPE2406 2010-08-05",
    "SCOPE2408 2009-09-25",
    "SCOPE2408 2010-02-22",
    "SCOPE2408 2010-04-27",
    "SCOPE2408 2010-06-10",
    "SCOPE3600 2011-09-01",
    "SCOPE3602 2011-01-03",
    "SCOPE3602 2011-05-13",
    "SCOPE3604 2011-11-21",
    "SCOPE3605 2011-05-24",
    "SCOPE3605 2012-01-19",
    "SCOPE3609 2012-01-17",
    "SCOPE3613 2011-12-23",
    "SCOPE3625 2012-03-31",
    "SCOPE3625 2012-04-04",
    "SCOPE3630 2012-03-13",
    "SCOPE3660 2013-01-15",
    "SCOPE3676 2012-12-04",
    "SCOPE3676 2013-01-24",
    "SCOPE3676 2013-02-07",
    "SCOPE3676 2013-05-22",
    "SCOPE3676 2013-06-25",
    "SCOPE3676 2013-08-20",
    "SCOPE3677 2012-10-02",
    "SCOPE3677 2012-10-30",
    "SCOPE3677 2012-12-11",
    "SCOPE3677 2012-12-18",
    "SCOPE3677 2012-12-25",
    "SCOPE3677 2013-01-05",
    "SCOPE3677 2013-01-10",
    "SCOPE3677 2013-01-17",
    "SCOPE3677 2013-01-19",
    "SCOPE3677 2013-01-25",
    "SCOPE3677 2013-02-07",
    "SCOPE3677 2013-02-14",
    "SCOPE3677 2013-02-19",
    "SCOPE3677 2013-02-21",
    "SCOPE3677 2013-02-22",
    "SCOPE3677 2013-02-27",
    "SCOPE3677 2013-03-05",
    "SCOPE3677 2013-03-12",
    "SCOPE3677 2013-03-18",
    "SCOPE3677 2013-03-26",
    "SCOPE3677 2013-04-16",
    "SCOPE3677 2013-04-23",
    "SCOPE3677 2013-05-22",
    "SCOPE3677 2013-06-01",
    "SCOPE3677 2013-07-02",
    "SCOPE3677 2013-07-16",
    "SCOPE3677 2013-08-20",
    "SCOPE3677 2013-09-06",
    "4118000024 2014-11-10",
    "4118000035 2014-06-23",
    "4118000054 2014-11-04",
    "4118000074 2014-12-10",
    "4118000086 2014-07-17",
    "4118000101 2014-07-30",
    "4118000112 2014-12-30",
    "4118000138 2014-06-16",
    "4118000145 2014-11-06",
    "4118000156 2014-08-05",
    "4118000168 2014-12-22",
    "4118000172 2014-08-06",
    "4118000196 2014-06-22",
    "4118000226 2014-05-12",
    "4118000236 2014-11-19",
    "4118000277 2015-01-19",
    "4118000281 2014-11-24",
    "4118000298 2014-06-05",
    "4118000337 2015-04-27",
    "4118000344 2015-01-19",
    "4118000353 2015-07-13",
    "4118000367 2015-08-12",
    "4118000376 2015-08-31",
    "4117600097 2015-06-30",
    "4117600097 2015-05-05",
    "4117600097 2015-03-10",
    "4117600097 2015-04-07"]

    SubjectModel = apps.get_model("cephia", "Subject")
    for i in lines:
        sub, d = i.split(" ")
        subject = SubjectModel.objects.get(subject_label=sub)
        d = datetime.strptime(d, '%Y-%m-%d')
        subject.cohort_entry_date = d.date()
        subject.save()

class Migration(migrations.Migration):

    dependencies = [
        ('cephia', '0067_set_default_visit_ids_on_assay_results'),
    ]

    operations = [
        migrations.RunPython(fix_subject, migrations.RunPython.noop)
    ]
