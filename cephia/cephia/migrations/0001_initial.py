# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-04-19 11:49
from __future__ import unicode_literals

import cephia.fields
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lib.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assay', '__first__'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='CephiaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('temporary_locked_out_at', models.DateTimeField(blank=True, null=True)),
                ('num_login_failures', models.IntegerField(blank=True, default=0)),
                ('password_reset_token', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'cephia_users',
                'permissions': [('can_upload_panel_data', 'Can upload memberships and shipments'), ('can_upload_results', 'Can upload results'), ('can_upload_clinical_data', 'Can upload subjects and visits'), ('can_upload_eddi_data', 'Can upload diagnostic data'), ('can_upload_specimen_data', 'Can upload aliquot, transfer in, transfer out'), ('can_purge_assay_results', 'Can purge assay results'), ('can_purge_assay_runs', 'Can purge assay runs')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AliquotRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('parent_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('aliquot_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_aliquot', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cephia_aliquot_rows',
            },
        ),
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('long_name', models.CharField(max_length=255)),
                ('developer', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('is_custom', models.BooleanField(default=False)),
                ('created_by', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assays', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cephia_assay',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cephia_countries',
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'cephia_ethnicities',
            },
        ),
        migrations.CreateModel(
            name='FileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(upload_to=b'/home/andrew/id/idt_prod/cephia/cephia/../../media')),
                ('file_type', models.CharField(choices=[(b'', b'---------'), (b'aliquot', b'Aliquot'), (b'assay', b'Assay'), (b'diagnostic_test', b'Diagnostic Test'), (b'panel_shipment', b'Panel Shipment'), (b'panel_membership', b'Panel Membership'), (b'protocol_lookup', b'Protocol Lookup'), (b'subject', b'Subject'), (b'test_history', b'Diagnostic Test History'), (b'test_property', b'Diagnostic Test Properties'), (b'transfer_in', b'Transfer In'), (b'transfer_out', b'Transfer Out'), (b'visit', b'Visit'), (b'viral_load', b'Viral Load'), (b'treatment_status_update', b'Treatment Status Update')], max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'imported', b'Imported'), (b'validated', b'Validated'), (b'error', b'Error')], default=b'pending', max_length=10)),
                ('priority', models.IntegerField(default=1)),
                ('message', models.TextField(blank=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('specimen_label_type', models.CharField(blank=True, choices=[(b'aliquot_label', b'Aliquot Label'), (b'root_specimen', b'Root Specimen'), (b'aliquot_base', b'Aliquot Base')], default=b'aliquot_label', max_length=255)),
                ('assay', cephia.fields.ProtectedForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Assay')),
            ],
            options={
                'db_table': 'cephia_datafiles',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAliquotRow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(blank=True, editable=False)),
                ('parent_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('aliquot_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_aliquot', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical aliquot row',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFileInfo',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('data_file', models.TextField(max_length=100)),
                ('file_type', models.CharField(choices=[(b'', b'---------'), (b'aliquot', b'Aliquot'), (b'assay', b'Assay'), (b'diagnostic_test', b'Diagnostic Test'), (b'panel_shipment', b'Panel Shipment'), (b'panel_membership', b'Panel Membership'), (b'protocol_lookup', b'Protocol Lookup'), (b'subject', b'Subject'), (b'test_history', b'Diagnostic Test History'), (b'test_property', b'Diagnostic Test Properties'), (b'transfer_in', b'Transfer In'), (b'transfer_out', b'Transfer Out'), (b'visit', b'Visit'), (b'viral_load', b'Viral Load'), (b'treatment_status_update', b'Treatment Status Update')], max_length=50)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('state', models.CharField(choices=[(b'pending', b'Pending'), (b'imported', b'Imported'), (b'validated', b'Validated'), (b'error', b'Error')], default=b'pending', max_length=10)),
                ('priority', models.IntegerField(default=1)),
                ('message', models.TextField(blank=True)),
                ('task_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('specimen_label_type', models.CharField(blank=True, choices=[(b'aliquot_label', b'Aliquot Label'), (b'root_specimen', b'Root Specimen'), (b'aliquot_base', b'Aliquot Base')], default=b'aliquot_label', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assay', cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Assay')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical file info',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSpecimen',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('specimen_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('parent_label', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('number_of_containers', models.IntegerField(blank=True, null=True)),
                ('reported_draw_date', models.DateField(blank=True, null=True)),
                ('transfer_in_date', models.DateField(blank=True, null=True)),
                ('transfer_out_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('transfer_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_linkage', models.CharField(choices=[(b'provisional', b'Provisional'), (b'confirmed', b'Confirmed'), (b'artificial', b'Artificial')], max_length=12, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=20, null=True)),
                ('initial_claimed_volume', models.FloatField(blank=True, null=True)),
                ('shipped_in_panel', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_artificial', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical specimen',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('subject_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('cohort_entry_date', models.DateField(blank=True, db_index=True, null=True)),
                ('cohort_entry_hiv_status', models.CharField(choices=[(b'negative', b'Negative'), (b'positive', b'Positive')], max_length=8)),
                ('last_negative_date', models.DateField(blank=True, null=True)),
                ('first_positive_date', models.DateField(blank=True, null=True)),
                ('edsc_reported', models.DateField(blank=True, default=None, null=True)),
                ('ars_onset_date', models.DateField(blank=True, null=True)),
                ('fiebig_stage_at_firstpos', models.CharField(max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[(b'male', b'Male'), (b'female', b'Female'), (b'unkown', b'Unkown')], max_length=6)),
                ('transgender', models.NullBooleanField()),
                ('risk_sex_with_men', models.NullBooleanField()),
                ('risk_sex_with_women', models.NullBooleanField()),
                ('risk_idu', models.NullBooleanField()),
                ('subtype_confirmed', models.NullBooleanField()),
                ('art_initiation_date', models.DateField(blank=True, null=True)),
                ('aids_diagnosis_date', models.DateField(blank=True, null=True)),
                ('art_interruption_date', models.DateField(blank=True, null=True)),
                ('art_resumption_date', models.DateField(blank=True, null=True)),
                ('artificial', models.BooleanField(default=False)),
                ('subject_label_blinded', models.CharField(blank=True, db_index=True, max_length=25, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country', cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Country')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('population_group', cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Ethnicity')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical subject',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubjectEDDI',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ep_ddi', models.DateField(blank=True, null=True)),
                ('lp_ddi', models.DateField(blank=True, null=True)),
                ('interval_size', models.IntegerField(blank=True, null=True)),
                ('edsc_days_difference', models.IntegerField(blank=True, null=True)),
                ('eddi', models.DateField(blank=True, null=True)),
                ('recalculate', models.BooleanField(default=False)),
                ('eddi_type', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical subject eddi',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubjectRow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(blank=True, editable=False)),
                ('subject_label', models.CharField(blank=True, max_length=255)),
                ('source_study', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_mm', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_dd', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_hiv_status', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_mm', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_dd', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_mm', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_dd', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_yyyy', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_mm', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_dd', models.CharField(blank=True, max_length=255)),
                ('fiebig_stage_at_firstpos', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_mm', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_dd', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_yyyy', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_mm', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_dd', models.CharField(blank=True, max_length=255)),
                ('sex', models.CharField(blank=True, max_length=255)),
                ('transgender', models.CharField(blank=True, max_length=255)),
                ('population_group', models.CharField(blank=True, max_length=255)),
                ('risk_sex_with_men', models.CharField(blank=True, max_length=255)),
                ('risk_sex_with_women', models.CharField(blank=True, max_length=255)),
                ('risk_idu', models.CharField(blank=True, max_length=255)),
                ('subtype', models.CharField(blank=True, max_length=255)),
                ('subtype_confirmed', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_mm', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_dd', models.CharField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical subject row',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransferInRow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(blank=True, editable=False)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_label', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_containers', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('source_study', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('roll_up', models.NullBooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical transfer in row',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransferOutRow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(blank=True, editable=False)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_containers', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('shipped_in_panel', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_site', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical transfer out row',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVisit',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('subject_label', models.CharField(max_length=255)),
                ('visit_date', models.DateField(blank=True, null=True)),
                ('visit_hivstatus', models.CharField(choices=[(b'negative', b'Negative'), (b'positive', b'Positive'), (b'unknown', b'Unkown')], max_length=8)),
                ('cd4_count', models.IntegerField(null=True)),
                ('vl_reported', models.CharField(max_length=20, null=True)),
                ('vl_cephia', models.CharField(max_length=20, null=True)),
                ('viral_load', models.IntegerField(null=True)),
                ('vl_type', models.CharField(max_length=20, null=True)),
                ('vl_detectable', models.NullBooleanField()),
                ('viral_load_offset', models.IntegerField(default=None, null=True)),
                ('scopevisit_ec', models.BooleanField(default=False)),
                ('pregnant', models.NullBooleanField()),
                ('hepatitis', models.NullBooleanField()),
                ('artificial', models.BooleanField(default=False)),
                ('treatment_naive', models.BooleanField(default=True)),
                ('on_treatment', models.BooleanField(default=False)),
                ('first_treatment', models.NullBooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical visit',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVisitEDDI',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('days_since_eddi', models.IntegerField(null=True)),
                ('days_since_ep_ddi', models.IntegerField(null=True)),
                ('days_since_lp_ddi', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical visit eddi',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVisitRow',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(blank=True, editable=False)),
                ('subject_label', models.CharField(blank=True, max_length=255)),
                ('visitdate_yyyy', models.CharField(blank=True, max_length=255)),
                ('visitdate_mm', models.CharField(blank=True, max_length=255)),
                ('visitdate_dd', models.CharField(blank=True, max_length=255)),
                ('visit_hivstatus', models.CharField(blank=True, max_length=255)),
                ('source_study', models.CharField(blank=True, max_length=255)),
                ('cd4_count', models.CharField(blank=True, max_length=255)),
                ('vl', models.CharField(blank=True, max_length=255)),
                ('artificial', models.CharField(blank=True, max_length=255)),
                ('scopevisit_ec', models.CharField(blank=True, max_length=255)),
                ('pregnant', models.CharField(blank=True, max_length=255)),
                ('hepatitis', models.CharField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical visit row',
            },
        ),
        migrations.CreateModel(
            name='ImportedRowComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('resolve_date', models.DateTimeField()),
                ('resolve_action', models.TextField()),
                ('assigned_to', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cephia_importedrow_comments',
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cephia_laboratories',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cephia_locations',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('n_recent', models.IntegerField(null=True)),
                ('n_longstanding', models.IntegerField(null=True)),
                ('n_challenge', models.IntegerField(null=True)),
                ('n_reproducibility_controls', models.IntegerField(null=True)),
                ('n_negative', models.IntegerField(null=True)),
                ('n_total', models.IntegerField(null=True)),
                ('blinded', models.NullBooleanField()),
                ('notes', models.TextField(null=True)),
            ],
            options={
                'db_table': 'cephia_panels',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cephia_regions',
            },
        ),
        migrations.CreateModel(
            name='Specimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('parent_label', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('number_of_containers', models.IntegerField(blank=True, null=True)),
                ('reported_draw_date', models.DateField(blank=True, null=True)),
                ('transfer_in_date', models.DateField(blank=True, null=True)),
                ('transfer_out_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('transfer_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_linkage', models.CharField(choices=[(b'provisional', b'Provisional'), (b'confirmed', b'Confirmed'), (b'artificial', b'Artificial')], max_length=12, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=20, null=True)),
                ('initial_claimed_volume', models.FloatField(blank=True, null=True)),
                ('shipped_in_panel', models.CharField(blank=True, max_length=255, null=True)),
                ('aliquoting_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_artificial', models.BooleanField(default=False)),
                ('location', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Location')),
                ('parent', cephia.fields.ProtectedForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Specimen')),
                ('shipped_to', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipped_to', to='cephia.Laboratory')),
            ],
            options={
                'db_table': 'cephia_specimens',
            },
        ),
        migrations.CreateModel(
            name='SpecimenType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('spec_type', models.CharField(max_length=10)),
                ('spec_group', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cephia_specimen_types',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cephia_studies',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('cohort_entry_date', models.DateField(blank=True, db_index=True, null=True)),
                ('cohort_entry_hiv_status', models.CharField(choices=[(b'negative', b'Negative'), (b'positive', b'Positive')], max_length=8)),
                ('last_negative_date', models.DateField(blank=True, null=True)),
                ('first_positive_date', models.DateField(blank=True, null=True)),
                ('edsc_reported', models.DateField(blank=True, default=None, null=True)),
                ('ars_onset_date', models.DateField(blank=True, null=True)),
                ('fiebig_stage_at_firstpos', models.CharField(max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[(b'male', b'Male'), (b'female', b'Female'), (b'unkown', b'Unkown')], max_length=6)),
                ('transgender', models.NullBooleanField()),
                ('risk_sex_with_men', models.NullBooleanField()),
                ('risk_sex_with_women', models.NullBooleanField()),
                ('risk_idu', models.NullBooleanField()),
                ('subtype_confirmed', models.NullBooleanField()),
                ('art_initiation_date', models.DateField(blank=True, null=True)),
                ('aids_diagnosis_date', models.DateField(blank=True, null=True)),
                ('art_interruption_date', models.DateField(blank=True, null=True)),
                ('art_resumption_date', models.DateField(blank=True, null=True)),
                ('artificial', models.BooleanField(default=False)),
                ('subject_label_blinded', models.CharField(blank=True, db_index=True, max_length=25, null=True, unique=True)),
                ('country', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Country')),
                ('population_group', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Ethnicity')),
                ('source_study', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Study')),
            ],
            options={
                'db_table': 'cephia_subjects',
            },
        ),
        migrations.CreateModel(
            name='SubjectEDDI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ep_ddi', models.DateField(blank=True, null=True)),
                ('lp_ddi', models.DateField(blank=True, null=True)),
                ('interval_size', models.IntegerField(blank=True, null=True)),
                ('edsc_days_difference', models.IntegerField(blank=True, null=True)),
                ('eddi', models.DateField(blank=True, null=True)),
                ('recalculate', models.BooleanField(default=False)),
                ('eddi_type', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cephia_subject_eddi',
            },
        ),
        migrations.CreateModel(
            name='SubjectEDDIStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'ok', b'OK'), (b'investigate', b'Investigate'), (b'suspected_incorrect_data', b'Suspected Incorrect Data'), (b'resolved', b'Resolved'), (b'other', b'Other')], max_length=30, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cephia_subject_eddi_status',
            },
        ),
        migrations.CreateModel(
            name='SubjectRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('subject_label', models.CharField(blank=True, max_length=255)),
                ('source_study', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_mm', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_date_dd', models.CharField(blank=True, max_length=255)),
                ('cohort_entry_hiv_status', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_mm', models.CharField(blank=True, max_length=255)),
                ('last_negative_date_dd', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_mm', models.CharField(blank=True, max_length=255)),
                ('first_positive_date_dd', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_yyyy', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_mm', models.CharField(blank=True, max_length=255)),
                ('edsc_reported_dd', models.CharField(blank=True, max_length=255)),
                ('fiebig_stage_at_firstpos', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_mm', models.CharField(blank=True, max_length=255)),
                ('ars_onset_date_dd', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_yyyy', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_mm', models.CharField(blank=True, max_length=255)),
                ('date_of_birth_dd', models.CharField(blank=True, max_length=255)),
                ('sex', models.CharField(blank=True, max_length=255)),
                ('transgender', models.CharField(blank=True, max_length=255)),
                ('population_group', models.CharField(blank=True, max_length=255)),
                ('risk_sex_with_men', models.CharField(blank=True, max_length=255)),
                ('risk_sex_with_women', models.CharField(blank=True, max_length=255)),
                ('risk_idu', models.CharField(blank=True, max_length=255)),
                ('subtype', models.CharField(blank=True, max_length=255)),
                ('subtype_confirmed', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_mm', models.CharField(blank=True, max_length=255)),
                ('aids_diagnosis_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_dd', models.CharField(blank=True, max_length=255)),
                ('comment', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.ImportedRowComment')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('subject', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Subject')),
            ],
            options={
                'db_table': 'cephia_subjectrows',
            },
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'cephia_subtypes',
            },
        ),
        migrations.CreateModel(
            name='TransferInRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_label', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('drawdate_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_containers', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('source_study', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('roll_up', models.NullBooleanField()),
                ('comment', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.ImportedRowComment')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('specimen', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'cephia_transfer_in_rows',
            },
        ),
        migrations.CreateModel(
            name='TransferOutRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_containers', models.CharField(blank=True, max_length=255, null=True)),
                ('specimen_type', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('volume_units', models.CharField(blank=True, max_length=255, null=True)),
                ('shipped_in_panel', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_dd', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_mm', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_date_yyyy', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_site', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.ImportedRowComment')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('specimen', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Specimen')),
            ],
            options={
                'db_table': 'cephia_transfer_out_rows',
            },
        ),
        migrations.CreateModel(
            name='TreatmentStatusUpdateRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('subject_label', models.CharField(blank=True, max_length=255)),
                ('source_study', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_initiation_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_interruption_date_dd', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_yyyy', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_mm', models.CharField(blank=True, max_length=255)),
                ('art_resumption_date_dd', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('subject', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Subject')),
            ],
            options={
                'db_table': 'cephia_treatmentstatusupdate_rows',
            },
        ),
        migrations.CreateModel(
            name='ViralLoadRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('specimen_label', models.CharField(max_length=255, null=True)),
                ('relation', models.CharField(max_length=255, null=True)),
                ('value', models.CharField(max_length=255, null=True)),
                ('comment', models.CharField(max_length=255, null=True)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_label', models.CharField(max_length=255)),
                ('visit_date', models.DateField(blank=True, null=True)),
                ('visit_hivstatus', models.CharField(choices=[(b'negative', b'Negative'), (b'positive', b'Positive'), (b'unknown', b'Unkown')], max_length=8)),
                ('cd4_count', models.IntegerField(null=True)),
                ('vl_reported', models.CharField(max_length=20, null=True)),
                ('vl_cephia', models.CharField(max_length=20, null=True)),
                ('viral_load', models.IntegerField(null=True)),
                ('vl_type', models.CharField(max_length=20, null=True)),
                ('vl_detectable', models.NullBooleanField()),
                ('viral_load_offset', models.IntegerField(default=None, null=True)),
                ('scopevisit_ec', models.BooleanField(default=False)),
                ('pregnant', models.NullBooleanField()),
                ('hepatitis', models.NullBooleanField()),
                ('artificial', models.BooleanField(default=False)),
                ('treatment_naive', models.BooleanField(default=True)),
                ('on_treatment', models.BooleanField(default=False)),
                ('first_treatment', models.NullBooleanField()),
                ('source_study', cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Study')),
                ('subject', cephia.fields.ProtectedForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Subject')),
            ],
            options={
                'db_table': 'cephia_visits',
            },
        ),
        migrations.CreateModel(
            name='VisitDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_after_aids_diagnosis', models.NullBooleanField()),
                ('age_in_years', models.PositiveIntegerField(null=True)),
                ('ever_aids_diagnosis', models.NullBooleanField()),
                ('ever_scope_ec', models.NullBooleanField()),
                ('earliest_visit_date', models.DateField(null=True)),
                ('days_since_cohort_entry', models.IntegerField(null=True)),
                ('days_since_first_draw', models.IntegerField(null=True)),
                ('days_since_first_art', models.IntegerField(null=True)),
                ('days_since_current_art', models.IntegerField(null=True)),
                ('days_from_eddi_to_first_art', models.IntegerField(null=True)),
                ('days_from_eddi_to_current_art', models.IntegerField(null=True)),
                ('region', models.CharField(max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('visit', lib.fields.OneToOneOrNoneField(on_delete=django.db.models.deletion.CASCADE, related_name='visitdetail', to='cephia.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='VisitEDDI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_since_eddi', models.IntegerField(null=True)),
                ('days_since_ep_ddi', models.IntegerField(null=True)),
                ('days_since_lp_ddi', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'cephia_visit_eddi',
            },
        ),
        migrations.CreateModel(
            name='VisitRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('subject_label', models.CharField(blank=True, max_length=255)),
                ('visitdate_yyyy', models.CharField(blank=True, max_length=255)),
                ('visitdate_mm', models.CharField(blank=True, max_length=255)),
                ('visitdate_dd', models.CharField(blank=True, max_length=255)),
                ('visit_hivstatus', models.CharField(blank=True, max_length=255)),
                ('source_study', models.CharField(blank=True, max_length=255)),
                ('cd4_count', models.CharField(blank=True, max_length=255)),
                ('vl', models.CharField(blank=True, max_length=255)),
                ('artificial', models.CharField(blank=True, max_length=255)),
                ('scopevisit_ec', models.CharField(blank=True, max_length=255)),
                ('pregnant', models.CharField(blank=True, max_length=255)),
                ('hepatitis', models.CharField(blank=True, max_length=255)),
                ('comment', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.ImportedRowComment')),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('visit', cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Visit')),
            ],
            options={
                'db_table': 'cephia_visitrows',
            },
        ),
        migrations.AddField(
            model_name='visit',
            name='visit_eddi',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.VisitEDDI'),
        ),
        migrations.AddField(
            model_name='viralloadrow',
            name='visit',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Visit'),
        ),
        migrations.AddField(
            model_name='subject',
            name='subject_eddi',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.SubjectEDDI'),
        ),
        migrations.AddField(
            model_name='subject',
            name='subject_eddi_status',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.SubjectEDDIStatus'),
        ),
        migrations.AddField(
            model_name='subject',
            name='subtype',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Subtype'),
        ),
        migrations.AddField(
            model_name='specimen',
            name='source_study',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Study'),
        ),
        migrations.AddField(
            model_name='specimen',
            name='specimen_type',
            field=cephia.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.SpecimenType'),
        ),
        migrations.AddField(
            model_name='specimen',
            name='subject',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Subject'),
        ),
        migrations.AddField(
            model_name='specimen',
            name='visit',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='specimens', to='cephia.Visit'),
        ),
        migrations.AddField(
            model_name='panel',
            name='specimen_type',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.SpecimenType'),
        ),
        migrations.AddField(
            model_name='panel',
            name='visits',
            field=models.ManyToManyField(related_name='panels', through='assay.PanelMembership', to='cephia.Visit'),
        ),
        migrations.AddField(
            model_name='historicalvisitrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='historicalvisitrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='historicalvisitrow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalvisitrow',
            name='visit',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Visit'),
        ),
        migrations.AddField(
            model_name='historicalvisit',
            name='source_study',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Study'),
        ),
        migrations.AddField(
            model_name='historicalvisit',
            name='subject',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Subject'),
        ),
        migrations.AddField(
            model_name='historicalvisit',
            name='visit_eddi',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.VisitEDDI'),
        ),
        migrations.AddField(
            model_name='historicaltransferoutrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='historicaltransferoutrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='historicaltransferoutrow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltransferoutrow',
            name='specimen',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='historicaltransferinrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='historicaltransferinrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='historicaltransferinrow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltransferinrow',
            name='specimen',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='historicalsubjectrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='historicalsubjectrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='historicalsubjectrow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsubjectrow',
            name='subject',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Subject'),
        ),
        migrations.AddField(
            model_name='historicalsubject',
            name='source_study',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Study'),
        ),
        migrations.AddField(
            model_name='historicalsubject',
            name='subject_eddi',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.SubjectEDDI'),
        ),
        migrations.AddField(
            model_name='historicalsubject',
            name='subject_eddi_status',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.SubjectEDDIStatus'),
        ),
        migrations.AddField(
            model_name='historicalsubject',
            name='subtype',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Subtype'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='location',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Location'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='parent',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='shipped_to',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Laboratory'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='source_study',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Study'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='specimen_type',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.SpecimenType'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='subject',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Subject'),
        ),
        migrations.AddField(
            model_name='historicalspecimen',
            name='visit',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Visit'),
        ),
        migrations.AddField(
            model_name='historicalfileinfo',
            name='panel',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Panel'),
        ),
        migrations.AddField(
            model_name='historicalaliquotrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='historicalaliquotrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='historicalaliquotrow',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalaliquotrow',
            name='specimen',
            field=cephia.fields.ProtectedForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='cephia.Specimen'),
        ),
        migrations.AddField(
            model_name='fileinfo',
            name='panel',
            field=cephia.fields.ProtectedForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Panel'),
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.Region'),
        ),
        migrations.AddField(
            model_name='aliquotrow',
            name='comment',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.ImportedRowComment'),
        ),
        migrations.AddField(
            model_name='aliquotrow',
            name='fileinfo',
            field=cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo'),
        ),
        migrations.AddField(
            model_name='aliquotrow',
            name='specimen',
            field=cephia.fields.ProtectedForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cephia.Specimen'),
        ),
    ]
