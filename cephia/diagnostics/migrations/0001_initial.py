# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-04-19 11:58
from __future__ import unicode_literals

import cephia.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cephia', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosticTest',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cephia_diagnostic_tests',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticTestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(null=True)),
                ('adjusted_date', models.DateField(null=True)),
                ('test_result', models.CharField(max_length=15, null=True)),
                ('ignore', models.BooleanField(default=False)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_history', to='cephia.Subject')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='diagnostics.DiagnosticTest')),
            ],
            options={
                'db_table': 'cephia_diagnostic_test_history',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticTestHistoryRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'recalled', b'Recalled'), (b'pending', b'Pending'), (b'validated', b'Validated'), (b'imported', b'Imported'), (b'processed', b'Processed'), (b'error', b'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('date_processed', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('test_date', models.CharField(blank=True, max_length=255)),
                ('test_code', models.CharField(blank=True, max_length=255)),
                ('test_result', models.CharField(blank=True, max_length=255)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('protocol', models.CharField(blank=True, max_length=255)),
                ('fileinfo', cephia.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cephia.FileInfo')),
                ('test_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='diagnostics.DiagnosticTestHistory')),
            ],
            options={
                'db_table': 'cephia_diagnostic_test_history_row',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDiagnosticTest',
            fields=[
                ('id', models.IntegerField(db_index=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical diagnostic test',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDiagnosticTestHistory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('test_date', models.DateField(null=True)),
                ('adjusted_date', models.DateField(null=True)),
                ('test_result', models.CharField(max_length=15, null=True)),
                ('ignore', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cephia.Subject')),
                ('test', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='diagnostics.DiagnosticTest')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical diagnostic test history',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProtocolLookup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('protocol', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='diagnostics.DiagnosticTest')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical protocol lookup',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTestPropertyEstimate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('estimate_label', models.CharField(blank=True, max_length=255)),
                ('estimate_type', models.CharField(blank=True, max_length=255)),
                ('mean_diagnostic_delay_days', models.IntegerField(null=True)),
                ('diagnostic_delay_median', models.IntegerField(null=True)),
                ('foursigma_diagnostic_delay_days', models.IntegerField(null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('time0_ref', models.CharField(blank=True, max_length=255)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='diagnostics.DiagnosticTest')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical test property estimate',
            },
        ),
        migrations.CreateModel(
            name='ProtocolLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('protocol', models.CharField(max_length=100)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostics.DiagnosticTest')),
            ],
            options={
                'db_table': 'cephia_protocol_lookup',
            },
        ),
        migrations.CreateModel(
            name='TestPropertyEstimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_label', models.CharField(blank=True, max_length=255)),
                ('estimate_type', models.CharField(blank=True, max_length=255)),
                ('mean_diagnostic_delay_days', models.IntegerField(null=True)),
                ('diagnostic_delay_median', models.IntegerField(null=True)),
                ('foursigma_diagnostic_delay_days', models.IntegerField(null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('time0_ref', models.CharField(blank=True, max_length=255)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('test', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='diagnostics.DiagnosticTest')),
            ],
            options={
                'db_table': 'cephia_test_property_estimates',
            },
        ),
    ]
